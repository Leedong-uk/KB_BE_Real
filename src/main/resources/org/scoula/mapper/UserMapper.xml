<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.scoula.mapper.UserMapper">

    <!-- user_id로 users_idx 조회 -->
    <select id="findUserIdxByUserId" parameterType="String" resultType="int">
        SELECT users_idx
        FROM users
        WHERE user_id = #{userId}
    </select>

    <!-- user_id로 사용자 조회 -->
    <select id="findById" parameterType="String" resultType="org.scoula.security.dto.MemberDTO">
        SELECT users_idx, user_id, user_name, password, address, jwt_refresh_token, kakao_user_id, birthdate
        FROM users
        WHERE user_id = #{userId}
    </select>

    <!-- 모든 사용자 조회 -->
    <select id="findAll" resultType="org.scoula.security.dto.MemberDTO">
        SELECT users_idx, user_id, user_name, password, address, jwt_refresh_token, kakao_user_id, birthdate
        FROM users
    </select>

    <!-- user_name으로 사용자 조회 -->
    <select id="findByUsername" parameterType="string" resultType="org.scoula.security.dto.MemberDTO">
        SELECT users_idx, user_id, user_name, password, address, jwt_refresh_token, kakao_user_id, birthdate
        FROM users
        WHERE user_name = #{userName}
    </select>

    <!-- 사용자 추가 -->
    <insert id="insertUser" parameterType="org.scoula.security.dto.MemberDTO" useGeneratedKeys="true" keyProperty="userIdx" keyColumn="users_idx">
        INSERT INTO users (user_id, user_name, password, address, jwt_refresh_token, kakao_user_id, birthdate)
        VALUES (#{userId}, #{userName}, #{password}, #{address}, #{jwtRefreshToken}, #{kakaoUserId}, #{birthdate})
    </insert>

    <!-- 사용자 수정 -->
    <update id="updateUser" parameterType="org.scoula.security.dto.MemberDTO">
        UPDATE users
        SET user_id = #{userId},
            user_name = #{userName},
            password = #{password},
            address = #{address},
            jwt_refresh_token = #{jwtRefreshToken},
            kakao_user_id = #{kakaoUserId},
            birthdate = #{birthdate}
        WHERE users_idx = #{id}
    </update>

    <!-- 사용자 삭제 -->
    <delete id="deleteUser" parameterType="int">
        DELETE FROM users WHERE users_idx = #{userIdx}
    </delete>

    <!-- 해당 유저가 users_auth 테이블에 있는지 확인 -->
    <select id="countUserByIdx" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM users_auth WHERE user_idx = #{userIdx}
    </select>


    <insert id="insertAuth">
        INSERT INTO users_auth (user_idx,auth)
        VALUES (#{user_idx},#{auth})
    </insert>

</mapper>
